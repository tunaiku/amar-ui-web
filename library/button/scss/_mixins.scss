@import '@amar-ui-web/core/helpers';
@import '@amar-ui-web/elevation/scss/mixins';
@import '@amar-ui-web/spacing/scss/variables';
@import '@amar-ui-web/color/scss/variables';
@import './variables';

/// Main entrypoint of all functions to generate button component and its underlying functions.
///
@mixin amb-create-button-classes() {
  .Button {
    @include amb-add-button-base-styles();
    @include amb-add-button-base-state-classes();

    @include amb-create-button-variant-classes();
    @include amb-create-button-size-classes();
    @include amb-create-button-shape-classes();
    @include amb-create-button-elevated-class();
  }
}

/// Basic styles shared with all types and variants of button.
///
@mixin amb-add-button-base-styles() {
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;

  font-size: $amb-button-font-size;
  font-weight: $amb-button-font-weight;
  font-family: $amb-button-font-family;
  line-height: $amb-button-line-height;
  letter-spacing: $amb-button-letter-spacing;
  text-align: center;

  padding: $amb-button-spacing;
  min-width: $amb-button-min-width;

  color: $amb-button-fg-color;
  background-color: $amb-button-bg-color;

  border-style: $amb-button-border-style;
  border-width: $amb-button-border-width;
  border-color: $amb-button-border-color;
  // border-color: $amb-button-border-color;
  border-radius: $amb-button-border-radius;

  transition: $amb-button-transition;
  white-space: nowrap;
  outline: none;
  -webkit-appearance: none;

  text-decoration: none;

  /* Apply pointer cursor on non-disabled buttons */
  @include amb-button-is-not-disabled() {
    cursor: pointer;
  }
}

@mixin amb-add-button-base-state-classes() {
  @include amb-button-is-disabled() {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  @include amb-button-is-not-disabled() {
    // Reset outline on every state classes to remove collision with border styling.
    @include amb-button-is-hovered() {
      border-color: $amb-button-border-color--is-hovered;
      color: $amb-button-fg-color--is-hovered;
      outline: none;
    }

    @include amb-button-is-focused() {
      box-shadow: $amb-button-box-shadow--is-focused;
      border-color: $amb-button-border-color--is-focused;
      color: $amb-button-fg-color--is-focused;
      outline: none;
    }

    @include amb-button-is-active() {
      outline: none;
    }

    // Retains 'pointer-events: auto' stylerule to elements aside from link tag.
    &:not(a) {
      pointer-events: auto;
    }
  }
}

/// Generate different button variants based on color themes.
///
@mixin amb-create-button-variant-classes() {
  @each $color-theme, $color-theme-value in $amb-color-theme-map {
    &--#{$color-theme} {
      @include amb-add-button-filled-styles($color-theme);
      @include amb-create-button-text-class($color-theme);
      @include amb-create-button-outlined-class($color-theme);
      @include amb-create-button-raised-class($color-theme);
    }
  }
}
@mixin amb-add-button-filled-styles($color-theme) {
  @include amb-button-is-not-disabled() {
    $box-shadow-values: $amb-button-box-shadow-values;

    @include amb-button-is-hovered() {
      $bg-color-hovered: amb-color-theme($color-theme, 40);
      $fg-color-hovered: amb-color-contrast($bg-color-hovered);
      $border-color-hovered: $bg-color-hovered;

      color: $fg-color-hovered;
      background-color: $bg-color-hovered;
      border-color: $border-color-hovered;
    }

    @include amb-button-is-focused() {
      $bg-color-focused: amb-color-theme($color-theme, 40);
      $fg-color-focused: amb-color-contrast($bg-color-focused);
      $border-color-focused: $bg-color-focused;
      $box-shadow-color-focused: amb-color-theme-opacity($color-theme, 0.3);
      $box-shadow-focused: $box-shadow-values $box-shadow-color-focused;

      color: $fg-color-focused;
      background-color: $bg-color-focused;
      border-color: $border-color-focused;
      box-shadow: $box-shadow-focused;
    }

    @include amb-button-is-active() {
      $bg-color-active: amb-color-theme($color-theme, 30);
      $fg-color-active: amb-color-contrast($bg-color-active);
      $border-color-active: $bg-color-active;

      color: $fg-color-active;
      background-color: $bg-color-active;
      border-color: $border-color-active;

      // box-shadow: none;
    }
  }

  background-color: amb-color-theme($color-theme);
  color: amb-color-theme-contrast($color-theme);
  border-color: amb-color-theme($color-theme);
}

/// Generate the outlined or non-filled version from a standard button.
/// @param {String} $color-theme
///
@mixin amb-create-button-outlined-class($color-theme) {
  &.Button--outlined {
    @include amb-button-is-not-disabled() {
      color: amb-color-theme($color-theme);
      border-color: amb-color-theme($color-theme);
      background-color: amb-color-theme-opacity($color-theme, 0);

      @include amb-button-is-hovered() {
        color: amb-color-theme($color-theme);
        border-color: amb-color-theme-opacity($color-theme, 1);
        background-color: amb-color-theme-opacity($color-theme, 0.1);
      }

      @include amb-button-is-focused() {
        color: amb-color-theme($color-theme);
        background-color: amb-color-theme-opacity($color-theme, 0.2);
        border-color: amb-color-theme-opacity($color-theme, 1);
        outline: none;
      }

      @include amb-button-is-active() {
        color: amb-color-theme($color-theme);
        background-color: amb-color-theme-opacity($color-theme, 0.3);
        border-color: amb-color-theme-opacity($color-theme, 1);
      }
    }
  }
}

/// Generate naked or text variant from a standard button.
/// @access public
/// @param {String} $color-theme
///
@mixin amb-create-button-text-class($color-theme) {
  &.Button--text {
    @include amb-button-is-not-disabled() {
      color: amb-color-theme($color-theme);
      border-color: amb-color-theme-opacity($color-theme, 0);
      box-shadow: none;
      background-color: transparent;

      @include amb-button-is-hovered() {
        background-color: amb-color-theme-opacity($color-theme, 0.15);
      }

      @include amb-button-is-focused() {
        background-color: amb-color-theme-opacity($color-theme, 0.25);
      }

      @include amb-button-is-active() {
        background-color: amb-color-theme-opacity($color-theme, 0.35);
      }
    }
  }
}

/// Generates elevated variant from a standard button component.
/// @access public
///
@mixin amb-create-button-elevated-class() {
  &--elevated {
    @include amb-create-elevation(2);

    @include amb-button-is-not-disabled() {
      @include amb-button-is-hovered() {
        @include amb-create-elevation(3);
      }

      @include amb-button-is-focused() {
        @include amb-create-elevation(3);
      }

      @include amb-button-is-active() {
        @include amb-create-elevation(2);
      }
    }
  }
}

/** 
 * Appends a modifier class to generate a raised button components.
 *
 * NOTE: This is still an experimental API. 
 */
@mixin amb-create-button-raised-class($color-theme) {
  &.Button--raised {
    @include amb-button-is-not-disabled() {
      border-bottom-color: amb-color-theme($color-theme, 60);
      border-bottom-width: $amb-button-raised-border-bottom-width;

      @include amb-button-is-hovered() {
        border-bottom-color: amb-color-theme($color-theme, 60);
      }

      @include amb-button-is-focused() {
        margin-top: 0px;
        outline: none;
      }

      @include amb-button-is-active() {
        border-bottom-width: 1px;
        margin-top: $amb-button-raised-border-bottom-width - 1;
        outline: none;
      }
    }
  }
}

@mixin amb-create-button-size-classes() {
  @each $size-name, $size-properties in $amb-button-size-map {
    &--#{$size-name} {
      @include create-properties($size-properties);
    }
  }
}

/**
 *
 */
@mixin amb-create-button-shape-classes() {
  &--round {
    border-radius: amb-border-radius('round');
  }

  // Extend button to 100% width of its parent
  &--fullWidth {
    width: 100%;
  }
}

/// Generate the .ButtonGroup helper class.
/// Used to encase multiple button components into form a single, unified control.
///
@mixin amb-create-button-group-classes() {
  .ButtonGroup {
    @include amb-button-group-base-styles();
  }
}

@mixin amb-button-group-base-styles() {
  display: flex;
  flex-direction: row;

  > .Button {
    @include amb-button-is-hovered() {
      z-index: 1;
    }

    @include amb-button-is-focused() {
      z-index: 1;
    }
  }

  > .Button:not(:last-child) {
    margin-right: -1px;
  }

  > .Button:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  > .Button:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  > .Button:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}

/**
 * These are helper mixins used in amb-button to reduce abstractions and adhere 
 * to reusability.
 */
@mixin amb-button-is-not-disabled() {
  &:not(:disabled):not(.is-disabled) {
    @content;
  }
}

@mixin amb-button-is-disabled() {
  &:disabled,
  &.is-disabled {
    @content;
  }
}

@mixin amb-button-is-hovered() {
  &:hover,
  &.is-hovered {
    @content;
  }
}

@mixin amb-button-is-focused() {
  &:focus,
  &.is-focused {
    @content;
  }
}

@mixin amb-button-is-active() {
  &:active,
  &.is-active {
    @content;
  }
}

// TO-DO: Deprecate this helper mixin since it's not used anymore.
// Shorthand version of the specific state functions.
@mixin amb-button-is-state($state: 'disabled') {
  @include amb-button-is-#{$state} {
    @content;
  }
}
