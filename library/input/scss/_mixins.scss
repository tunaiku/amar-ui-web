@import '@amar-ui-web/shape/scss/variables';
@import '@amar-ui-web/color/scss/variables';
@import '@amar-ui-web/spacing/scss/functions';
@import './variables';

@mixin amb-create-input-classes() {
  .Input,
  .Textarea {
    @include amb-input-base-styles();
    @include amb-append-input-state-variants();
    @include amb-append-input-color-theme-variants();
    @include amb-append-input-size-variants();
    @include amb-append-input-shape-variants();
  }
}

@mixin amb-input-base-styles() {
  position: relative;
  display: flex;
  flex: 1 1 auto;
  width: 100%;
  line-height: $amb-input-line-height;
  font-family: $amb-input-font-family;
  font-size: $amb-input-font-size;
  padding: $amb-input-spacing;
  transition: $amb-input-transition;
  background-color: $amb-input-bg-color;
  border-style: solid;
  border-width: 1px;
  border-color: $amb-input-border-color;
  border-radius: $amb-input-border-radius;
  outline: none;
  white-space: normal;
}

@mixin amb-append-input-state-variants($color-theme: '') {
  @include amb-append-input-focused-state($color-theme);
  @include amb-append-input-hovered-state($color-theme);
  @include amb-append-input-disabled-state();
}

@mixin amb-append-input-focused-state($color-theme) {
  $border-color: '' !default;
  $box-shadow: '' !default;

  @if $color-theme == '' {
    $border-color: $amb-input-focused-border-color;
    $box-shadow: $amb-input-focused-box-shadow;
  } @else {
    $border-color: amb-color-theme($color-theme);
    $box-shadow-color: amb-color-theme-opacity($color-theme, 0.3);
    $box-shadow-values: $amb-input-focused-box-shadow-values;
    $box-shadow: $box-shadow-values $box-shadow-color;
  }

  @include amb-input-is-not-disabled() {
    &:focus,
    &.is-focused {
      border-color: $border-color;
      box-shadow: $box-shadow;
    }
  }
}

@mixin amb-append-input-hovered-state($color-theme) {
  $border-color: '' !default;

  @if $color-theme == '' {
    $border-color: $amb-input-hovered-border-color;
  } @else {
    $border-color: amb-color-theme($color-theme);
  }

  @include amb-input-is-not-disabled() {
    &:hover,
    &.is-hovered {
      border-color: $border-color;
    }
  }
}

@mixin amb-append-input-disabled-state() {
  &:disabled,
  &.is-disabled {
    background-color: $amb-input-disabled-background;
    cursor: not-allowed;
  }
}

/**
 * Append color theme variant classes.
 */
@mixin amb-append-input-color-theme-variants() {
  @each $color-theme, $color-theme-value in $amb-color-theme-map {
    &--#{$color-theme} {
      @include amb-input-is-not-disabled() {
        @include amb-append-input-state-variants($color-theme);

        border-color: $color-theme-value;
      }
    }
  }
}

@mixin amb-append-input-size-variants() {
  @each $size-name, $size-value in $amb-font-size-map {
    &--#{$size-name} {
      font-size: amb-font-size($size-name);
      padding: amb-spacing($size-name);
    }
  }
}

@mixin amb-append-input-shape-variants() {
  &--round {
    border-radius: $amb-input-rounded-border-radius;
  }
}

@mixin amb-input-is-not-disabled() {
  &:not(:disabled):not(.is-disabled) {
    @content;
  }
}
